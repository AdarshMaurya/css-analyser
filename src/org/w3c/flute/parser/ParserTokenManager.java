/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package org.w3c.flute.parser;
import java.io.*;
import java.net.*;
import java.util.Locale;
import org.w3c.css.sac.ConditionFactory;
import org.w3c.css.sac.Condition;
import org.w3c.css.sac.SelectorFactory;
import org.w3c.css.sac.SelectorList;
import org.w3c.css.sac.Selector;
import org.w3c.css.sac.SimpleSelector;
import org.w3c.css.sac.DocumentHandler;
import org.w3c.css.sac.InputSource;
import org.w3c.css.sac.ErrorHandler;
import org.w3c.css.sac.CSSException;
import org.w3c.css.sac.CSSParseException;
import org.w3c.css.sac.Locator;
import org.w3c.css.sac.LexicalUnit;
import org.w3c.flute.parser.selectors.SelectorFactoryImpl;
import org.w3c.flute.parser.selectors.ConditionFactoryImpl;
import org.w3c.flute.util.Encoding;
// :)
import ca.concordia.cssanalyser.parser.flute.CSSDocumentHandler;
import ca.concordia.cssanalyser.cssmodel.media.MediaQuery;
import ca.concordia.cssanalyser.cssmodel.media.MediaQueryList;
import ca.concordia.cssanalyser.cssmodel.media.MediaFeatureExpression;
import ca.concordia.cssanalyser.cssmodel.media.MediaQuery.MediaQueryPrefix;

/** Token Manager. */
public class ParserTokenManager implements ParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x1fL) != 0L)
            return 48;
         if ((active0 & 0x8000L) != 0L)
            return 378;
         if ((active0 & 0x10040L) != 0L)
            return 241;
         if ((active0 & 0x2000000L) != 0L)
            return 379;
         return -1;
      case 1:
         if ((active1 & 0x1fL) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 1;
            return 380;
         }
         return -1;
      case 2:
         if ((active1 & 0x1fL) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 2;
            return 380;
         }
         return -1;
      case 3:
         if ((active1 & 0x1fL) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 3;
            return 380;
         }
         return -1;
      case 4:
         if ((active1 & 0x17L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 4;
            return 380;
         }
         if ((active1 & 0x8L) != 0L)
            return 380;
         return -1;
      case 5:
         if ((active1 & 0x2L) != 0L)
            return 380;
         if ((active1 & 0x15L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 5;
            return 380;
         }
         return -1;
      case 6:
         if ((active1 & 0x1L) != 0L)
            return 380;
         if ((active1 & 0x14L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 6;
            return 380;
         }
         return -1;
      case 7:
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 7;
            return 380;
         }
         if ((active1 & 0x4L) != 0L)
            return 380;
         return -1;
      case 8:
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 8;
            return 380;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x2000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 26);
      case 41:
         return jjStopAtPos(0, 27);
      case 42:
         jjmatchedKind = 24;
         return jjMoveStringLiteralDfa1_0(0x800L, 0x0L);
      case 43:
         return jjStartNfaWithStates_0(0, 15, 378);
      case 44:
         return jjStopAtPos(0, 17);
      case 45:
         jjmatchedKind = 16;
         return jjMoveStringLiteralDfa1_0(0x40L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 25, 379);
      case 47:
         jjmatchedKind = 21;
         return jjMoveStringLiteralDfa1_0(0x4L, 0x0L);
      case 58:
         return jjStopAtPos(0, 28);
      case 59:
         return jjStopAtPos(0, 18);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x20L, 0x0L);
      case 61:
         return jjStopAtPos(0, 14);
      case 62:
         return jjStopAtPos(0, 19);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1fL);
      case 91:
         return jjStopAtPos(0, 22);
      case 93:
         return jjStopAtPos(0, 23);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      case 123:
         return jjStopAtPos(0, 7);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x200L, 0x0L);
      case 125:
         return jjStopAtPos(0, 8);
      case 126:
         jjmatchedKind = 20;
         return jjMoveStringLiteralDfa1_0(0x1000L, 0x0L);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x20L, active1, 0L);
      case 42:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x40L, active1, 0L);
      case 61:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(1, 9);
         else if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(1, 10);
         else if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(1, 11);
         else if ((active0 & 0x1000L) != 0L)
            return jjStopAtPos(1, 12);
         else if ((active0 & 0x2000L) != 0L)
            return jjStopAtPos(1, 13);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x20L, active1, 0L);
      case 62:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(2, 6);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(3, 5);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(4, 67, 380);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x2L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x1L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x4L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_0(active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x10L);
      case 65:
      case 97:
         if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(5, 65, 380);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0x1L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0x4L);
      default :
         break;
   }
   return jjStartNfa_0(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x4L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x10L);
      case 84:
      case 116:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(6, 64, 380);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(5, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x10L);
      case 84:
      case 116:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(7, 66, 380);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, 0L, active1);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(6, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, 0L, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(7, 0L, active1);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(7, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, 0L, active1);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(9, 68, 380);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, 0L, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 378;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 380:
               case 50:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddTwoStates(50, 51);
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(155, 158);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(151, 153);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(148, 149);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(144, 146);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 142);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(132, 136);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(127, 130);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(122, 125);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(118, 120);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(113, 116);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(109, 111);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(105, 107);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(101, 103);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(97, 99);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(93, 95);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(89, 91);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(85, 87);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(82, 83);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAdd(80);
                  }
                  break;
               case 241:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddStates(4, 6);
                  }
                  else if (curChar == 46)
                     jjCheckNAdd(160);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(7, 10);
                  else if (curChar == 46)
                     jjCheckNAdd(155);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(11, 14);
                  else if (curChar == 46)
                     jjCheckNAdd(151);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(15, 18);
                  else if (curChar == 46)
                     jjCheckNAdd(148);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(19, 22);
                  else if (curChar == 46)
                     jjCheckNAdd(144);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(23, 26);
                  else if (curChar == 46)
                     jjCheckNAdd(138);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(27, 30);
                  else if (curChar == 46)
                     jjCheckNAdd(132);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(31, 34);
                  else if (curChar == 46)
                     jjCheckNAdd(127);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(35, 38);
                  else if (curChar == 46)
                     jjCheckNAdd(122);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(39, 42);
                  else if (curChar == 46)
                     jjCheckNAdd(118);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(43, 46);
                  else if (curChar == 46)
                     jjCheckNAdd(113);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(47, 50);
                  else if (curChar == 46)
                     jjCheckNAdd(109);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(51, 54);
                  else if (curChar == 46)
                     jjCheckNAdd(105);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(55, 58);
                  else if (curChar == 46)
                     jjCheckNAdd(101);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(59, 62);
                  else if (curChar == 46)
                     jjCheckNAdd(97);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(63, 66);
                  else if (curChar == 46)
                     jjCheckNAdd(93);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(67, 70);
                  else if (curChar == 46)
                     jjCheckNAdd(89);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(71, 74);
                  else if (curChar == 46)
                     jjCheckNAdd(85);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  else if (curChar == 46)
                     jjCheckNAdd(82);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(79, 84);
                  else if (curChar == 46)
                     jjCheckNAdd(80);
                  break;
               case 48:
                  if (curChar == 45)
                     jjAddStates(85, 86);
                  break;
               case 378:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddStates(4, 6);
                  }
                  else if (curChar == 46)
                     jjCheckNAdd(160);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(7, 10);
                  else if (curChar == 46)
                     jjCheckNAdd(155);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(11, 14);
                  else if (curChar == 46)
                     jjCheckNAdd(151);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(15, 18);
                  else if (curChar == 46)
                     jjCheckNAdd(148);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(19, 22);
                  else if (curChar == 46)
                     jjCheckNAdd(144);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(23, 26);
                  else if (curChar == 46)
                     jjCheckNAdd(138);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(27, 30);
                  else if (curChar == 46)
                     jjCheckNAdd(132);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(31, 34);
                  else if (curChar == 46)
                     jjCheckNAdd(127);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(35, 38);
                  else if (curChar == 46)
                     jjCheckNAdd(122);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(39, 42);
                  else if (curChar == 46)
                     jjCheckNAdd(118);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(43, 46);
                  else if (curChar == 46)
                     jjCheckNAdd(113);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(47, 50);
                  else if (curChar == 46)
                     jjCheckNAdd(109);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(51, 54);
                  else if (curChar == 46)
                     jjCheckNAdd(105);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(55, 58);
                  else if (curChar == 46)
                     jjCheckNAdd(101);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(59, 62);
                  else if (curChar == 46)
                     jjCheckNAdd(97);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(63, 66);
                  else if (curChar == 46)
                     jjCheckNAdd(93);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(67, 70);
                  else if (curChar == 46)
                     jjCheckNAdd(89);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(71, 74);
                  else if (curChar == 46)
                     jjCheckNAdd(85);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  else if (curChar == 46)
                     jjCheckNAdd(82);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(79, 84);
                  else if (curChar == 46)
                     jjCheckNAdd(80);
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddStates(87, 167);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(0);
                  }
                  else if ((0x280000000000L & l) != 0L)
                  {
                     if (kind > 38)
                        kind = 38;
                     jjCheckNAddStates(168, 207);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(208, 227);
                  else if (curChar == 33)
                     jjCheckNAddTwoStates(68, 77);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(37, 38);
                  else if (curChar == 39)
                     jjCheckNAddStates(228, 231);
                  else if (curChar == 34)
                     jjCheckNAddStates(232, 235);
                  if (curChar == 45)
                     jjAddStates(236, 239);
                  break;
               case 0:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 34)
                     jjCheckNAddStates(232, 235);
                  break;
               case 3:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(232, 235);
                  break;
               case 4:
                  if (curChar == 34 && kind > 39)
                     kind = 39;
                  break;
               case 6:
                  if (curChar == 12)
                     jjCheckNAddStates(232, 235);
                  break;
               case 8:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(232, 235);
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(240, 245);
                  break;
               case 10:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(232, 235);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(246, 254);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(255, 259);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(260, 265);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(266, 272);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(273, 280);
                  break;
               case 16:
                  if (curChar == 13)
                     jjCheckNAddStates(232, 235);
                  break;
               case 17:
                  if (curChar == 10)
                     jjCheckNAddStates(232, 235);
                  break;
               case 18:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 39)
                     jjCheckNAddStates(228, 231);
                  break;
               case 20:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(228, 231);
                  break;
               case 21:
                  if (curChar == 39 && kind > 39)
                     kind = 39;
                  break;
               case 23:
                  if (curChar == 12)
                     jjCheckNAddStates(228, 231);
                  break;
               case 25:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(228, 231);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(281, 286);
                  break;
               case 27:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(228, 231);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(287, 295);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(296, 300);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(301, 306);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(307, 313);
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(314, 321);
                  break;
               case 33:
                  if (curChar == 13)
                     jjCheckNAddStates(228, 231);
                  break;
               case 34:
                  if (curChar == 10)
                     jjCheckNAddStates(228, 231);
                  break;
               case 35:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 37:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 39:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(322, 325);
                  break;
               case 41:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(326, 332);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(333, 335);
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(336, 339);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(340, 344);
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(345, 350);
                  break;
               case 52:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddTwoStates(50, 51);
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(351, 354);
                  break;
               case 54:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddTwoStates(50, 51);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(355, 361);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(362, 364);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(365, 368);
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(369, 373);
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(374, 379);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(380, 383);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(384, 390);
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(391, 393);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(394, 397);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(398, 402);
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(403, 408);
                  break;
               case 67:
                  if (curChar == 33)
                     jjCheckNAddTwoStates(68, 77);
                  break;
               case 68:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(68, 77);
                  break;
               case 78:
                  if ((0x280000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjCheckNAddStates(168, 207);
                  break;
               case 79:
                  if (curChar == 46)
                     jjCheckNAdd(80);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAdd(80);
                  break;
               case 81:
                  if (curChar == 46)
                     jjCheckNAdd(82);
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(82, 83);
                  break;
               case 83:
                  if (curChar == 37 && kind > 44)
                     kind = 44;
                  break;
               case 84:
                  if (curChar == 46)
                     jjCheckNAdd(85);
                  break;
               case 85:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(85, 87);
                  break;
               case 88:
                  if (curChar == 46)
                     jjCheckNAdd(89);
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(89, 91);
                  break;
               case 92:
                  if (curChar == 46)
                     jjCheckNAdd(93);
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(93, 95);
                  break;
               case 96:
                  if (curChar == 46)
                     jjCheckNAdd(97);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(97, 99);
                  break;
               case 100:
                  if (curChar == 46)
                     jjCheckNAdd(101);
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(101, 103);
                  break;
               case 104:
                  if (curChar == 46)
                     jjCheckNAdd(105);
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(105, 107);
                  break;
               case 108:
                  if (curChar == 46)
                     jjCheckNAdd(109);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(109, 111);
                  break;
               case 112:
                  if (curChar == 46)
                     jjCheckNAdd(113);
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(113, 116);
                  break;
               case 117:
                  if (curChar == 46)
                     jjCheckNAdd(118);
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(118, 120);
                  break;
               case 121:
                  if (curChar == 46)
                     jjCheckNAdd(122);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(122, 125);
                  break;
               case 126:
                  if (curChar == 46)
                     jjCheckNAdd(127);
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(127, 130);
                  break;
               case 131:
                  if (curChar == 46)
                     jjCheckNAdd(132);
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(132, 136);
                  break;
               case 137:
                  if (curChar == 46)
                     jjCheckNAdd(138);
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 142);
                  break;
               case 143:
                  if (curChar == 46)
                     jjCheckNAdd(144);
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(144, 146);
                  break;
               case 147:
                  if (curChar == 46)
                     jjCheckNAdd(148);
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(148, 149);
                  break;
               case 150:
                  if (curChar == 46)
                     jjCheckNAdd(151);
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(151, 153);
                  break;
               case 154:
                  if (curChar == 46)
                     jjCheckNAdd(155);
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(155, 158);
                  break;
               case 159:
                  if (curChar == 46)
                     jjCheckNAdd(160);
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 161:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(162, 173);
                  break;
               case 163:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(163, 164);
                  break;
               case 165:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(163, 164);
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(409, 412);
                  break;
               case 167:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(163, 164);
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(413, 419);
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(420, 422);
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(423, 426);
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(427, 431);
                  break;
               case 172:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(432, 437);
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(438, 441);
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(442, 448);
                  break;
               case 176:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(449, 451);
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(452, 455);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(456, 460);
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(461, 466);
                  break;
               case 180:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(79, 84);
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(467, 470);
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(182, 159);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(184, 158);
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(185, 154);
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(71, 74);
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(187, 153);
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(188, 150);
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(67, 70);
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(190, 149);
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(191, 147);
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(63, 66);
                  break;
               case 193:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(193, 146);
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(194, 143);
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(59, 62);
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(196, 142);
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(197, 137);
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(55, 58);
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(199, 136);
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(200, 131);
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(51, 54);
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(202, 130);
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(203, 126);
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(47, 50);
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(205, 125);
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(206, 121);
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(43, 46);
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(208, 120);
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(209, 117);
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(39, 42);
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 116);
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(212, 112);
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(35, 38);
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(214, 111);
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(215, 108);
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(31, 34);
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(217, 107);
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(218, 104);
                  break;
               case 219:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(27, 30);
                  break;
               case 220:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(220, 103);
                  break;
               case 221:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(221, 100);
                  break;
               case 222:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(23, 26);
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(223, 99);
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(224, 96);
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(19, 22);
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(226, 95);
                  break;
               case 227:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(227, 92);
                  break;
               case 228:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(15, 18);
                  break;
               case 229:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(229, 91);
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(230, 88);
                  break;
               case 231:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(11, 14);
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(232, 87);
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(233, 84);
                  break;
               case 234:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(7, 10);
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(235, 83);
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(236, 81);
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(4, 6);
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAdd(238);
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(239, 79);
                  break;
               case 240:
                  if (curChar == 45)
                     jjAddStates(236, 239);
                  break;
               case 242:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddTwoStates(242, 243);
                  break;
               case 244:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddTwoStates(242, 243);
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(471, 474);
                  break;
               case 246:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddTwoStates(242, 243);
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(475, 481);
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(482, 484);
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(485, 488);
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(489, 493);
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(494, 499);
                  break;
               case 253:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(500, 502);
                  break;
               case 254:
                  if (curChar == 40 && kind > 81)
                     kind = 81;
                  break;
               case 256:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(500, 502);
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(503, 507);
                  break;
               case 258:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(500, 502);
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(508, 515);
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(516, 519);
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(520, 524);
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(525, 530);
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(531, 537);
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(538, 542);
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(543, 550);
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(551, 554);
                  break;
               case 268:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(555, 559);
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(560, 565);
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(566, 572);
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(573, 576);
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(577, 583);
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(584, 586);
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(587, 590);
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(591, 595);
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(596, 601);
                  break;
               case 279:
                  if (curChar == 46)
                     jjCheckNAddStates(208, 227);
                  break;
               case 281:
                  if (curChar == 40)
                     jjCheckNAddStates(602, 607);
                  break;
               case 282:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(608, 611);
                  break;
               case 283:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(283, 284);
                  break;
               case 284:
                  if (curChar == 41 && kind > 43)
                     kind = 43;
                  break;
               case 286:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(608, 611);
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(612, 616);
                  break;
               case 288:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(608, 611);
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(617, 624);
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(625, 628);
                  break;
               case 291:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(629, 633);
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(634, 639);
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(640, 646);
                  break;
               case 294:
                  if (curChar == 39)
                     jjCheckNAddStates(647, 650);
                  break;
               case 295:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(647, 650);
                  break;
               case 296:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(283, 284);
                  break;
               case 298:
                  if (curChar == 12)
                     jjCheckNAddStates(647, 650);
                  break;
               case 300:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(647, 650);
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(651, 656);
                  break;
               case 302:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(647, 650);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(657, 665);
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(666, 670);
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(671, 676);
                  break;
               case 306:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(677, 683);
                  break;
               case 307:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(684, 691);
                  break;
               case 308:
                  if (curChar == 13)
                     jjCheckNAddStates(647, 650);
                  break;
               case 309:
                  if (curChar == 10)
                     jjCheckNAddStates(647, 650);
                  break;
               case 310:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if (curChar == 34)
                     jjCheckNAddStates(692, 695);
                  break;
               case 312:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(692, 695);
                  break;
               case 313:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(283, 284);
                  break;
               case 315:
                  if (curChar == 12)
                     jjCheckNAddStates(692, 695);
                  break;
               case 317:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(692, 695);
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(696, 701);
                  break;
               case 319:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(692, 695);
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(702, 710);
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(711, 715);
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(716, 721);
                  break;
               case 323:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(722, 728);
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(729, 736);
                  break;
               case 325:
                  if (curChar == 13)
                     jjCheckNAddStates(692, 695);
                  break;
               case 326:
                  if (curChar == 10)
                     jjCheckNAddStates(692, 695);
                  break;
               case 327:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(737, 743);
                  break;
               case 331:
                  if (curChar == 43)
                     jjAddStates(744, 745);
                  break;
               case 332:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 333:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(746, 749);
                  break;
               case 334:
                  if (curChar == 63 && kind > 80)
                     kind = 80;
                  break;
               case 335:
               case 350:
               case 354:
               case 357:
               case 360:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(334);
                  break;
               case 336:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(334, 335);
                  break;
               case 337:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(750, 752);
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjAddStates(753, 758);
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(342);
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(334);
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 351:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 353:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(334, 354);
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 356:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(759, 761);
                  break;
               case 358:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(334, 357);
                  break;
               case 359:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(762, 765);
                  break;
               case 361:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(334, 360);
                  break;
               case 362:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(766, 768);
                  break;
               case 363:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(365, 371);
                  break;
               case 365:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(769, 772);
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(342);
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(342, 368);
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(773, 775);
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(776, 780);
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(365);
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(372, 365);
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(781, 783);
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(784, 787);
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(87, 167);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 380:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAddTwoStates(50, 51);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(52, 53);
                  break;
               case 241:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(500, 502);
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(244, 272);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                     jjCheckNAddTwoStates(242, 243);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(256, 265);
                  break;
               case 48:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAddTwoStates(50, 51);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(52, 61);
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                     jjCheckNAddStates(788, 792);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(793, 796);
                  else if (curChar == 64)
                     jjAddStates(797, 799);
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(800, 802);
                  break;
               case 3:
               case 8:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(232, 235);
                  break;
               case 5:
                  if (curChar == 92)
                     jjAddStates(803, 806);
                  break;
               case 7:
                  if (curChar == 92)
                     jjAddStates(807, 808);
                  break;
               case 9:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(240, 245);
                  break;
               case 11:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(246, 254);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(255, 259);
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(260, 265);
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(266, 272);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(273, 280);
                  break;
               case 20:
               case 25:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(228, 231);
                  break;
               case 22:
                  if (curChar == 92)
                     jjAddStates(809, 812);
                  break;
               case 24:
                  if (curChar == 92)
                     jjAddStates(813, 814);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(281, 286);
                  break;
               case 28:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(287, 295);
                  break;
               case 29:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(296, 300);
                  break;
               case 30:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(301, 306);
                  break;
               case 31:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(307, 313);
                  break;
               case 32:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(314, 321);
                  break;
               case 37:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if (curChar == 92)
                     jjAddStates(815, 816);
                  break;
               case 39:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 40:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(322, 325);
                  break;
               case 42:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(326, 332);
                  break;
               case 43:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(333, 335);
                  break;
               case 44:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(336, 339);
                  break;
               case 45:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(340, 344);
                  break;
               case 46:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(345, 350);
                  break;
               case 47:
                  if (curChar == 64)
                     jjAddStates(797, 799);
                  break;
               case 49:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddTwoStates(50, 51);
                  break;
               case 50:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddTwoStates(50, 51);
                  break;
               case 51:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(52, 53);
                  break;
               case 52:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddTwoStates(50, 51);
                  break;
               case 53:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(351, 354);
                  break;
               case 55:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(355, 361);
                  break;
               case 56:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(362, 364);
                  break;
               case 57:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(365, 368);
                  break;
               case 58:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(369, 373);
                  break;
               case 59:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(374, 379);
                  break;
               case 60:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(52, 61);
                  break;
               case 61:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(380, 383);
                  break;
               case 62:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(384, 390);
                  break;
               case 63:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(391, 393);
                  break;
               case 64:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(394, 397);
                  break;
               case 65:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(398, 402);
                  break;
               case 66:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(403, 408);
                  break;
               case 69:
                  if ((0x10000000100000L & l) != 0L && kind > 70)
                     kind = 70;
                  break;
               case 70:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 86:
                  if ((0x10000000100000L & l) != 0L && kind > 45)
                     kind = 45;
                  break;
               case 87:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 90:
                  if ((0x200000002000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 91:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 94:
                  if ((0x200000002000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 95:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 98:
                  if ((0x800000008L & l) != 0L && kind > 48)
                     kind = 48;
                  break;
               case 99:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 102:
                  if ((0x400000004000L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 103:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 106:
                  if ((0x100000001000000L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 107:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 110:
                  if ((0x200000002000L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 111:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 114:
                  if ((0x200000002000L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 115:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 119:
                  if ((0x100000001000000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 120:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 123:
                  if ((0x8000000080L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 124:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 128:
                  if ((0x1000000010L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 129:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 133:
                  if ((0x1000000010L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 134:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 139:
                  if ((0x400000004000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 140:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 145:
                  if ((0x8000000080000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 146:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 149:
                  if ((0x8000000080000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 152:
                  if ((0x400000004000000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 153:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 156:
                  if ((0x400000004000000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 157:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 162:
               case 163:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(163, 164);
                  break;
               case 164:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(165, 166);
                  break;
               case 165:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(163, 164);
                  break;
               case 166:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(409, 412);
                  break;
               case 168:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(413, 419);
                  break;
               case 169:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(420, 422);
                  break;
               case 170:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(423, 426);
                  break;
               case 171:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(427, 431);
                  break;
               case 172:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(432, 437);
                  break;
               case 173:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(165, 174);
                  break;
               case 174:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(438, 441);
                  break;
               case 175:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(442, 448);
                  break;
               case 176:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(449, 451);
                  break;
               case 177:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(452, 455);
                  break;
               case 178:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(456, 460);
                  break;
               case 179:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(461, 466);
                  break;
               case 242:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddTwoStates(242, 243);
                  break;
               case 243:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(244, 245);
                  break;
               case 244:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddTwoStates(242, 243);
                  break;
               case 245:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(471, 474);
                  break;
               case 247:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(475, 481);
                  break;
               case 248:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(482, 484);
                  break;
               case 249:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(485, 488);
                  break;
               case 250:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(489, 493);
                  break;
               case 251:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(494, 499);
                  break;
               case 252:
               case 253:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(500, 502);
                  break;
               case 255:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(256, 257);
                  break;
               case 256:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(500, 502);
                  break;
               case 257:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(503, 507);
                  break;
               case 259:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(508, 515);
                  break;
               case 260:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(516, 519);
                  break;
               case 261:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(520, 524);
                  break;
               case 262:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(525, 530);
                  break;
               case 263:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(531, 537);
                  break;
               case 264:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(256, 265);
                  break;
               case 265:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(538, 542);
                  break;
               case 266:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(543, 550);
                  break;
               case 267:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(551, 554);
                  break;
               case 268:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(555, 559);
                  break;
               case 269:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(560, 565);
                  break;
               case 270:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(566, 572);
                  break;
               case 271:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(244, 272);
                  break;
               case 272:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(573, 576);
                  break;
               case 273:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(577, 583);
                  break;
               case 274:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(584, 586);
                  break;
               case 275:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(587, 590);
                  break;
               case 276:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(591, 595);
                  break;
               case 277:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(596, 601);
                  break;
               case 278:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(788, 792);
                  break;
               case 280:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(800, 802);
                  break;
               case 282:
               case 286:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(608, 611);
                  break;
               case 285:
                  if (curChar == 92)
                     jjAddStates(817, 818);
                  break;
               case 287:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(612, 616);
                  break;
               case 289:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(617, 624);
                  break;
               case 290:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(625, 628);
                  break;
               case 291:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(629, 633);
                  break;
               case 292:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(634, 639);
                  break;
               case 293:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(640, 646);
                  break;
               case 295:
               case 300:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(647, 650);
                  break;
               case 297:
                  if (curChar == 92)
                     jjAddStates(819, 822);
                  break;
               case 299:
                  if (curChar == 92)
                     jjAddStates(823, 824);
                  break;
               case 301:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(651, 656);
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(657, 665);
                  break;
               case 304:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(666, 670);
                  break;
               case 305:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(671, 676);
                  break;
               case 306:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(677, 683);
                  break;
               case 307:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(684, 691);
                  break;
               case 312:
               case 317:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(692, 695);
                  break;
               case 314:
                  if (curChar == 92)
                     jjAddStates(825, 828);
                  break;
               case 316:
                  if (curChar == 92)
                     jjAddStates(829, 830);
                  break;
               case 318:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(696, 701);
                  break;
               case 320:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(702, 710);
                  break;
               case 321:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(711, 715);
                  break;
               case 322:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(716, 721);
                  break;
               case 323:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(722, 728);
                  break;
               case 324:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(729, 736);
                  break;
               case 329:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 330:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 338:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjAddStates(753, 758);
                  break;
               case 339:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 340:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(342);
                  break;
               case 342:
                  if ((0x7e0000007eL & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 343:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 344:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 345:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 346:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 347:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 348:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 349:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 351:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 352:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 364:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(365, 371);
                  break;
               case 366:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 367:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(769, 772);
                  break;
               case 368:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(342);
                  break;
               case 369:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(342, 368);
                  break;
               case 370:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(773, 775);
                  break;
               case 371:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(776, 780);
                  break;
               case 372:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(365);
                  break;
               case 373:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(372, 365);
                  break;
               case 374:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(781, 783);
                  break;
               case 375:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(784, 787);
                  break;
               case 376:
                  if (curChar == 92)
                     jjCheckNAddStates(793, 796);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 380:
               case 50:
               case 52:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddTwoStates(50, 51);
                  break;
               case 241:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                     jjCheckNAddTwoStates(242, 243);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(500, 502);
                  break;
               case 48:
               case 49:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddTwoStates(50, 51);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                     jjCheckNAddStates(788, 792);
                  }
                  break;
               case 3:
               case 8:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(232, 235);
                  break;
               case 20:
               case 25:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(228, 231);
                  break;
               case 37:
               case 39:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 162:
               case 163:
               case 165:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(163, 164);
                  break;
               case 242:
               case 244:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddTwoStates(242, 243);
                  break;
               case 252:
               case 253:
               case 256:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(500, 502);
                  break;
               case 278:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(788, 792);
                  break;
               case 282:
               case 286:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(608, 611);
                  break;
               case 295:
               case 300:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(647, 650);
                  break;
               case 312:
               case 317:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(692, 695);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 378 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x8L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   160, 161, 162, 173, 238, 239, 79, 235, 236, 81, 83, 232, 233, 84, 87, 229, 
   230, 88, 91, 226, 227, 92, 95, 223, 224, 96, 99, 220, 221, 100, 103, 217, 
   218, 104, 107, 214, 215, 108, 111, 211, 212, 112, 116, 208, 209, 117, 120, 205, 
   206, 121, 125, 202, 203, 126, 130, 199, 200, 131, 136, 196, 197, 137, 142, 193, 
   194, 143, 146, 190, 191, 147, 149, 187, 188, 150, 153, 184, 185, 154, 158, 181, 
   182, 159, 161, 162, 173, 49, 60, 238, 239, 79, 235, 236, 81, 83, 232, 233, 
   84, 87, 229, 230, 88, 91, 226, 227, 92, 95, 223, 224, 96, 99, 220, 221, 
   100, 103, 217, 218, 104, 107, 214, 215, 108, 111, 211, 212, 112, 116, 208, 209, 
   117, 120, 205, 206, 121, 125, 202, 203, 126, 130, 199, 200, 131, 136, 196, 197, 
   137, 142, 193, 194, 143, 146, 190, 191, 147, 149, 187, 188, 150, 153, 184, 185, 
   154, 158, 181, 182, 159, 161, 162, 173, 79, 81, 84, 88, 92, 96, 100, 104, 
   108, 112, 117, 121, 126, 131, 137, 143, 147, 150, 154, 159, 180, 183, 186, 189, 
   192, 195, 198, 201, 204, 207, 210, 213, 216, 219, 222, 225, 228, 231, 234, 237, 
   80, 82, 85, 89, 93, 97, 101, 105, 109, 113, 118, 122, 127, 132, 138, 144, 
   148, 151, 155, 160, 20, 21, 22, 24, 3, 4, 5, 7, 241, 252, 264, 271, 
   3, 10, 4, 5, 7, 11, 3, 12, 10, 4, 5, 7, 13, 14, 15, 3, 
   10, 4, 5, 7, 3, 12, 10, 4, 5, 7, 3, 12, 10, 4, 5, 7, 
   13, 3, 12, 10, 4, 5, 7, 13, 14, 20, 27, 21, 22, 24, 28, 20, 
   29, 27, 21, 22, 24, 30, 31, 32, 20, 27, 21, 22, 24, 20, 29, 27, 
   21, 22, 24, 20, 29, 27, 21, 22, 24, 30, 20, 29, 27, 21, 22, 24, 
   30, 31, 37, 41, 38, 42, 37, 43, 41, 38, 44, 45, 46, 37, 41, 38, 
   37, 43, 41, 38, 37, 43, 41, 38, 44, 37, 43, 41, 38, 44, 45, 50, 
   54, 51, 55, 50, 56, 54, 51, 57, 58, 59, 50, 54, 51, 50, 56, 54, 
   51, 50, 56, 54, 51, 57, 50, 56, 54, 51, 57, 58, 54, 50, 51, 62, 
   63, 54, 50, 51, 64, 65, 66, 54, 50, 51, 63, 54, 50, 51, 63, 54, 
   50, 51, 64, 63, 54, 50, 51, 64, 65, 163, 167, 164, 168, 163, 169, 167, 
   164, 170, 171, 172, 163, 167, 164, 163, 169, 167, 164, 163, 169, 167, 164, 170, 
   163, 169, 167, 164, 170, 171, 167, 163, 164, 175, 176, 167, 163, 164, 177, 178, 
   179, 167, 163, 164, 176, 167, 163, 164, 176, 167, 163, 164, 177, 176, 167, 163, 
   164, 177, 178, 181, 161, 162, 173, 242, 246, 243, 247, 242, 248, 246, 243, 249, 
   250, 251, 242, 246, 243, 242, 248, 246, 243, 242, 248, 246, 243, 249, 242, 248, 
   246, 243, 249, 250, 253, 254, 255, 253, 258, 254, 255, 259, 253, 260, 258, 254, 
   255, 261, 262, 263, 253, 258, 254, 255, 253, 260, 258, 254, 255, 253, 260, 258, 
   254, 255, 261, 253, 260, 258, 254, 255, 261, 262, 258, 253, 254, 255, 266, 267, 
   258, 253, 254, 255, 268, 269, 270, 258, 253, 254, 255, 267, 258, 253, 254, 255, 
   267, 258, 253, 254, 255, 268, 267, 258, 253, 254, 255, 268, 269, 246, 242, 243, 
   273, 274, 246, 242, 243, 275, 276, 277, 246, 242, 243, 274, 246, 242, 243, 274, 
   246, 242, 243, 275, 274, 246, 242, 243, 275, 276, 282, 294, 311, 284, 285, 328, 
   282, 283, 284, 285, 282, 284, 285, 288, 289, 282, 290, 284, 285, 288, 291, 292, 
   293, 282, 284, 285, 288, 282, 290, 284, 285, 288, 282, 290, 284, 285, 288, 291, 
   282, 290, 284, 285, 288, 291, 292, 295, 296, 297, 299, 295, 302, 296, 297, 299, 
   303, 295, 304, 302, 296, 297, 299, 305, 306, 307, 295, 302, 296, 297, 299, 295, 
   304, 302, 296, 297, 299, 295, 304, 302, 296, 297, 299, 305, 295, 304, 302, 296, 
   297, 299, 305, 306, 312, 313, 314, 316, 312, 319, 313, 314, 316, 320, 312, 321, 
   319, 313, 314, 316, 322, 323, 324, 312, 319, 313, 314, 316, 312, 321, 319, 313, 
   314, 316, 312, 321, 319, 313, 314, 316, 322, 312, 321, 319, 313, 314, 316, 322, 
   323, 282, 294, 311, 283, 284, 285, 328, 332, 338, 334, 335, 336, 337, 334, 335, 
   336, 339, 343, 347, 351, 355, 359, 334, 357, 358, 334, 360, 361, 362, 334, 360, 
   361, 342, 368, 369, 370, 342, 368, 369, 372, 365, 373, 374, 375, 372, 365, 373, 
   372, 365, 373, 374, 242, 253, 254, 255, 243, 244, 272, 256, 265, 48, 49, 60, 
   330, 331, 363, 6, 16, 18, 17, 8, 9, 23, 33, 35, 34, 25, 26, 39, 
   40, 286, 287, 298, 308, 310, 309, 300, 301, 315, 325, 327, 326, 317, 318, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\74\41\55\55", "\55\55\76", "\173", "\175", 
"\174\75", "\136\75", "\52\75", "\176\75", "\44\75", "\75", "\53", "\55", "\54", "\73", 
"\76", "\176", "\57", "\133", "\135", "\52", "\56", "\50", "\51", "\72", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffbc03fffffe3L, 0x7007fL, 
};
static final long[] jjtoSkip = {
   0x8L, 0x0L, 
};
static final long[] jjtoMore = {
   0x14L, 0x0L, 
};
protected CharStream input_stream;
private final int[] jjrounds = new int[378];
private final int[] jjstateSet = new int[756];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public ParserTokenManager(CharStream stream){
   input_stream = stream;
}

/** Constructor. */
public ParserTokenManager(CharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(CharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 378; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(CharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 82)
         {
            jjmatchedKind = 82;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 4)
         {
            jjmatchedKind = 4;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
          image = Parser.SPACE;
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
