/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package org.w3c.flute.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int S = 1;
  /** RegularExpression Id. */
  int CDO = 5;
  /** RegularExpression Id. */
  int CDC = 6;
  /** RegularExpression Id. */
  int LBRACE = 7;
  /** RegularExpression Id. */
  int RBRACE = 8;
  /** RegularExpression Id. */
  int DASHMATCH = 9;
  /** RegularExpression Id. */
  int CARETBEGIN = 10;
  /** RegularExpression Id. */
  int STARINCLD = 11;
  /** RegularExpression Id. */
  int INCLUDES = 12;
  /** RegularExpression Id. */
  int ENDSWITH = 13;
  /** RegularExpression Id. */
  int EQ = 14;
  /** RegularExpression Id. */
  int PLUS = 15;
  /** RegularExpression Id. */
  int MINUS = 16;
  /** RegularExpression Id. */
  int COMMA = 17;
  /** RegularExpression Id. */
  int SEMICOLON = 18;
  /** RegularExpression Id. */
  int PRECEDES = 19;
  /** RegularExpression Id. */
  int TILDA = 20;
  /** RegularExpression Id. */
  int DIV = 21;
  /** RegularExpression Id. */
  int LBRACKET = 22;
  /** RegularExpression Id. */
  int RBRACKET = 23;
  /** RegularExpression Id. */
  int ANY = 24;
  /** RegularExpression Id. */
  int DOT = 25;
  /** RegularExpression Id. */
  int LPARAN = 26;
  /** RegularExpression Id. */
  int RPARAN = 27;
  /** RegularExpression Id. */
  int COLON = 28;
  /** RegularExpression Id. */
  int NONASCII = 29;
  /** RegularExpression Id. */
  int H = 30;
  /** RegularExpression Id. */
  int UNICODE = 31;
  /** RegularExpression Id. */
  int ESCAPE = 32;
  /** RegularExpression Id. */
  int NMSTART = 33;
  /** RegularExpression Id. */
  int NMCHAR = 34;
  /** RegularExpression Id. */
  int STRINGCHAR = 35;
  /** RegularExpression Id. */
  int D = 36;
  /** RegularExpression Id. */
  int NAME = 37;
  /** RegularExpression Id. */
  int STRING = 38;
  /** RegularExpression Id. */
  int IDENT = 39;
  /** RegularExpression Id. */
  int NUMBER = 40;
  /** RegularExpression Id. */
  int _URL = 41;
  /** RegularExpression Id. */
  int URL = 42;
  /** RegularExpression Id. */
  int PERCENTAGE = 43;
  /** RegularExpression Id. */
  int PT = 44;
  /** RegularExpression Id. */
  int MM = 45;
  /** RegularExpression Id. */
  int CM = 46;
  /** RegularExpression Id. */
  int PC = 47;
  /** RegularExpression Id. */
  int IN = 48;
  /** RegularExpression Id. */
  int PX = 49;
  /** RegularExpression Id. */
  int EMS = 50;
  /** RegularExpression Id. */
  int EXS = 51;
  /** RegularExpression Id. */
  int DEG = 52;
  /** RegularExpression Id. */
  int RAD = 53;
  /** RegularExpression Id. */
  int GRAD = 54;
  /** RegularExpression Id. */
  int MS = 55;
  /** RegularExpression Id. */
  int SECOND = 56;
  /** RegularExpression Id. */
  int HZ = 57;
  /** RegularExpression Id. */
  int KHZ = 58;
  /** RegularExpression Id. */
  int DIMEN = 59;
  /** RegularExpression Id. */
  int HASH = 60;
  /** RegularExpression Id. */
  int IMPORT_SYM = 61;
  /** RegularExpression Id. */
  int MEDIA_SYM = 62;
  /** RegularExpression Id. */
  int CHARSET_SYM = 63;
  /** RegularExpression Id. */
  int PAGE_SYM = 64;
  /** RegularExpression Id. */
  int FONT_FACE_SYM = 65;
  /** RegularExpression Id. */
  int ATKEYWORD = 66;
  /** RegularExpression Id. */
  int IMPORTANT_SYM = 67;
  /** RegularExpression Id. */
  int RANGE0 = 68;
  /** RegularExpression Id. */
  int RANGE1 = 69;
  /** RegularExpression Id. */
  int RANGE2 = 70;
  /** RegularExpression Id. */
  int RANGE3 = 71;
  /** RegularExpression Id. */
  int RANGE4 = 72;
  /** RegularExpression Id. */
  int RANGE5 = 73;
  /** RegularExpression Id. */
  int RANGE6 = 74;
  /** RegularExpression Id. */
  int RANGE = 75;
  /** RegularExpression Id. */
  int UNI = 76;
  /** RegularExpression Id. */
  int UNICODERANGE = 77;
  /** RegularExpression Id. */
  int FUNCTION = 78;
  /** RegularExpression Id. */
  int UNKNOWN = 79;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<S>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 4>",
    "\"<!--\"",
    "\"-->\"",
    "\"{\"",
    "\"}\"",
    "\"|=\"",
    "\"^=\"",
    "\"*=\"",
    "\"~=\"",
    "\"$=\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\",\"",
    "\";\"",
    "\">\"",
    "\"~\"",
    "\"/\"",
    "\"[\"",
    "\"]\"",
    "\"*\"",
    "\".\"",
    "\")\"",
    "\"(\"",
    "\":\"",
    "<NONASCII>",
    "<H>",
    "<UNICODE>",
    "<ESCAPE>",
    "<NMSTART>",
    "<NMCHAR>",
    "<STRINGCHAR>",
    "<D>",
    "<NAME>",
    "<STRING>",
    "<IDENT>",
    "<NUMBER>",
    "<_URL>",
    "<URL>",
    "<PERCENTAGE>",
    "<PT>",
    "<MM>",
    "<CM>",
    "<PC>",
    "<IN>",
    "<PX>",
    "<EMS>",
    "<EXS>",
    "<DEG>",
    "<RAD>",
    "<GRAD>",
    "<MS>",
    "<SECOND>",
    "<HZ>",
    "<KHZ>",
    "<DIMEN>",
    "<HASH>",
    "\"@import\"",
    "\"@media\"",
    "\"@charset\"",
    "\"@page\"",
    "\"@font-face\"",
    "<ATKEYWORD>",
    "<IMPORTANT_SYM>",
    "<RANGE0>",
    "<RANGE1>",
    "<RANGE2>",
    "<RANGE3>",
    "<RANGE4>",
    "<RANGE5>",
    "<RANGE6>",
    "<RANGE>",
    "<UNI>",
    "<UNICODERANGE>",
    "<FUNCTION>",
    "<UNKNOWN>",
  };

}
